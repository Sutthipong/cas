name: Publish

env:
  JAVA_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  GRADLE_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  TERM: xterm-256color
  SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
  SONATYPE_PWD: ${{ secrets.SONATYPE_PWD }}
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PWD: ${{ secrets.DOCKER_PWD }}
  GH_PAGES_TOKEN: ${{ secrets.GH_PAGES_TOKEN }}
  GRADLE_BUILDCACHE_USER: ${{ secrets.GRADLE_BUILDCACHE_USER }}
  GRADLE_BUILDCACHE_PSW: ${{ secrets.GRADLE_BUILDCACHE_PSW }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RUBY_VERSION: 2.6
  JDK_CURRENT: 11.0.10

##########################################################################

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

##########################################################################

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: styfle/cancel-workflow-action@0.7.0
        with:
          access_token: ${{ github.token }}


##########################################################################

  initialize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: ls ./ci && chmod -R 777 ./ci/*.sh && ./ci/init-build.sh

##########################################################################

  cache:
    runs-on: ubuntu-latest
    needs: [initialize]
    if: ${{ !contains(github.event.head_commit.message, 'trigger dependency update') && !contains(github.event.head_commit.message, 'documentation update') }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/checkout@v2
      - name: Download Dependencies
        run: ./gradlew --build-cache --configure-on-demand --no-daemon downloadDependencies --parallel --refresh-dependencies
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
##########################################################################

  publish-snapshots:
    runs-on: ubuntu-latest
    needs: [cache]
    continue-on-error: false
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, 'trigger dependency update') && !contains(github.event.head_commit.message, 'documentation update') }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Publish SNAPSHOTs
        if: ${{ env.SONATYPE_USER != null && env.SONATYPE_PWD != null }}
        run: ./gradlew -DpublishSnapshots=true --build-cache --configure-on-demand --no-daemon --parallel -Dorg.gradle.internal.http.socketTimeout=180000 -Dorg.gradle.internal.http.connectionTimeout=180000 build publish -x test -x javadoc -x check -DsonatypeUsername="${SONATYPE_USER}" -DsonatypePassword="${SONATYPE_PWD}"

##########################################################################

  publish-docker-image:
    runs-on: ubuntu-latest
    needs: [publish-snapshots]
    continue-on-error: false
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, 'trigger dependency update') && !contains(github.event.head_commit.message, 'documentation update') }}
    steps:
      - name: Prepare
        run: |
          mkdir work
          cd work
          curl https://casinit.herokuapp.com/starter.tgz | tar -xzvf -
          chmod -R 777 ./*.sh
          ls
      - name: Build Docker Image
        run: |
          cd work
          ./docker-build.sh latest
      - name: Publish Docker Image
        if: ${{ env.DOCKER_USER != null && env.DOCKER_PWD != null }}
        run: |
          cd work
          ls
          ./docker-push.sh "${DOCKER_USER}" "${DOCKER_PWD}" latest
          
##########################################################################

  publish-docs:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, 'trigger dependency update') }}
    needs: [cache]
    continue-on-error: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install Ruby gems
        run: gem install bundler
      - name: Publish Documentation
        run: ./ci/docs/publish.sh development
